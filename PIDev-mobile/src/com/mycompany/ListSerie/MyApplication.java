package com.mycompany.ListSerie;

import GUI.Formation.AjouterFormation;
import GUI.User.ActiveUser;
import GUI.User.Login;
import GUI.User.NouvForm;
import GUI.User.ResetPwd;
import GUI.User.ResetPwdCode;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.mycompany.pidevapp.gui.QuizAddForm;
import com.mycompany.pidevapp.gui.ShowOffreForm;
import com.mycompany.pidevapp.gui.TakeQuiz;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    public static Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);


        theme = UIManager.initFirstTheme("/theme_1");


        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {


        if(current != null){
            current.show();
            return;
        }

//        ShowOffreForm fo = new ShowOffreForm();
//        fo.show();

//        new ActiveUser().show();
        
            new Login().show();
//        new AjouterFormation(theme).show();

    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
